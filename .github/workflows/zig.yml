name: Zig

on:
  push:
    branches: [main, release/**]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_protected == 'true' && github.sha || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:

  complete:
    if: always()
    needs: [fmt, build, examples-build]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: Homebrew/actions/setup-homebrew@master
    - run: brew install zig
    - run: zig fmt --check .

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: Homebrew/actions/setup-homebrew@master
    - run: brew install zig
    - run: zig build
    - run: zig build docs
    - uses: actions/upload-pages-artifact@v3
      with:
        path: zig-out/docs

  docs:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4

  examples-prepare:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - id: dirs
      run: |
        dirs=$(find . -type f -name 'Makefile' -mindepth 2 | xargs dirname | sed 's|^\./||' | jq -Rnc '[inputs | "\(.)"]')
        echo "dirs=$dirs" >> $GITHUB_OUTPUT
    outputs:
      dirs: ${{ steps.dirs.outputs.dirs }}

  examples-build:
    needs: examples-prepare
    strategy:
      matrix:
        working-directory: ${{ fromJSON(needs.examples-prepare.outputs.dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.working-directory }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: Homebrew/actions/setup-homebrew@master
    - run: brew install zig
    - run: cargo install --locked wasm-cs
    - run: cargo install --locked stellar-xdr --features cli --git https://github.com/stellar/rs-stellar-xdr --rev 17464996f47d25d6d836e76d0f6ae276969e7b8c
    - run: make build
    - uses: actions/upload-artifact@v4
      with:
        path: ${{ matrix.working-directory }}/*.wasm
